Object class has 11 methods (total 12 but one is private method)

public final native java.lang.Class<?> getClass();
public native int hashCode();
public boolean equals(java.lang.Object);
protected native java.lang.Object clone() throws java.lang.CloneNotSupportedException;
public java.lang.String toString();
public final native void notify();
public final native void notifyAll();
public final native void wait(long) throws java.lang.InterruptedException;
public final void wait(long, int) throws java.lang.InterruptedException;
public final void wait() throws java.lang.InterruptedException;
protected void finalize() throws java.lang.Throwable;



1)public java.lang.String toString()
===================================

** TO get String representation of Object....

** When ever printing object automatically toString() method will be called..

Test t=new Test();

System.out.println(t);//t.toString();	

internal implementation  of toString method 

public java.lang.String toString()
{
return getClass().getName()+"@"+Integer.toHexString(hashCode());

}


className+@+hashcode in hexadecimal format(0-9,a-f)

public native int hashCode():
============================
* For every object a unique number generated by JVM which is hashcode ,to generate hascode jvm internally use hashCode() while saving the object into hashing related datastructure.

**the search operation will become very efficient...



Search Alogrithms:
===================
Linear Search
Binary Search
Hashing Search
Jump Search
Interpolation Search
Exponential Search
Sublist Search (Search a linked list in another list)
Fibonacci Search....etc


The best searching algorithm is Hashing.



hashCode() method will generate hashCode based on address.










		
